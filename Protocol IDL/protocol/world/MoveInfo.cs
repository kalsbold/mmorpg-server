// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace protocol.world
{

using global::System;
using global::FlatBuffers;

public struct MoveInfo : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MoveInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float Rotation { get { return __p.bb.GetFloat(__p.bb_pos + 0); } }
  public protocol.Vec3 Pos { get { return (new protocol.Vec3()).__assign(__p.bb_pos + 4, __p.bb); } }
  public protocol.Vec3 Velocity { get { return (new protocol.Vec3()).__assign(__p.bb_pos + 16, __p.bb); } }

  public static Offset<MoveInfo> CreateMoveInfo(FlatBufferBuilder builder, float Rotation, float pos_X, float pos_Y, float pos_Z, float velocity_X, float velocity_Y, float velocity_Z) {
    builder.Prep(4, 28);
    builder.Prep(4, 12);
    builder.PutFloat(velocity_Z);
    builder.PutFloat(velocity_Y);
    builder.PutFloat(velocity_X);
    builder.Prep(4, 12);
    builder.PutFloat(pos_Z);
    builder.PutFloat(pos_Y);
    builder.PutFloat(pos_X);
    builder.PutFloat(Rotation);
    return new Offset<MoveInfo>(builder.Offset);
  }
};


}
