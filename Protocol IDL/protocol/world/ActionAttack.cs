// automatically generated by the FlatBuffers compiler, do not modify

namespace protocol.world
{

using System;
using FlatBuffers;

public struct ActionAttack : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ActionAttack GetRootAsActionAttack(ByteBuffer _bb) { return GetRootAsActionAttack(_bb, new ActionAttack()); }
  public static ActionAttack GetRootAsActionAttack(ByteBuffer _bb, ActionAttack obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ActionAttack __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float Rotation { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<ActionAttack> CreateActionAttack(FlatBufferBuilder builder,
      float rotation = 0.0f) {
    builder.StartObject(1);
    ActionAttack.AddRotation(builder, rotation);
    return ActionAttack.EndActionAttack(builder);
  }

  public static void StartActionAttack(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddRotation(FlatBufferBuilder builder, float rotation) { builder.AddFloat(0, rotation, 0.0f); }
  public static Offset<ActionAttack> EndActionAttack(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ActionAttack>(o);
  }
};


}
