// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ProtocolCS.World
{

using global::System;
using global::FlatBuffers;

public struct Notify_EnterZone : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Notify_EnterZone GetRootAsNotify_EnterZone(ByteBuffer _bb) { return GetRootAsNotify_EnterZone(_bb, new Notify_EnterZone()); }
  public static Notify_EnterZone GetRootAsNotify_EnterZone(ByteBuffer _bb, Notify_EnterZone obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Notify_EnterZone __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int MapId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateMapId(int map_id) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, map_id); return true; } else { return false; } }
  public ProtocolCS.Vec3? Position { get { int o = __p.__offset(6); return o != 0 ? (ProtocolCS.Vec3?)(new ProtocolCS.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public float Rotation { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateRotation(float rotation) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, rotation); return true; } else { return false; } }

  public static void StartNotify_EnterZone(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddMapId(FlatBufferBuilder builder, int mapId) { builder.AddInt(0, mapId, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<ProtocolCS.Vec3> positionOffset) { builder.AddStruct(1, positionOffset.Value, 0); }
  public static void AddRotation(FlatBufferBuilder builder, float rotation) { builder.AddFloat(2, rotation, 0.0f); }
  public static Offset<Notify_EnterZone> EndNotify_EnterZone(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Notify_EnterZone>(o);
  }
};


}
