// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ProtocolCS.World
{

using global::System;
using global::FlatBuffers;

public struct RemotePC : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static RemotePC GetRootAsRemotePC(ByteBuffer _bb) { return GetRootAsRemotePC(_bb, new RemotePC()); }
  public static RemotePC GetRootAsRemotePC(ByteBuffer _bb, RemotePC obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public RemotePC __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string EntityId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetEntityIdBytes() { return __p.__vector_as_arraysegment(4); }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public ProtocolCS.ClassType ClassType { get { int o = __p.__offset(8); return o != 0 ? (ProtocolCS.ClassType)__p.bb.GetInt(o + __p.bb_pos) : ProtocolCS.ClassType.NONE; } }
  public bool MutateClassType(ProtocolCS.ClassType class_type) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, (int)class_type); return true; } else { return false; } }
  public int Level { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateLevel(int level) { int o = __p.__offset(10); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, level); return true; } else { return false; } }
  public int MaxHp { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateMaxHp(int max_hp) { int o = __p.__offset(12); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, max_hp); return true; } else { return false; } }
  public int Hp { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateHp(int hp) { int o = __p.__offset(14); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, hp); return true; } else { return false; } }
  public int MaxMp { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateMaxMp(int max_mp) { int o = __p.__offset(16); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, max_mp); return true; } else { return false; } }
  public int Mp { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateMp(int mp) { int o = __p.__offset(18); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, mp); return true; } else { return false; } }
  public ProtocolCS.Vec3? Pos { get { int o = __p.__offset(20); return o != 0 ? (ProtocolCS.Vec3?)(new ProtocolCS.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public float Rotation { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateRotation(float rotation) { int o = __p.__offset(22); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, rotation); return true; } else { return false; } }

  public static void StartRemotePC(FlatBufferBuilder builder) { builder.StartObject(10); }
  public static void AddEntityId(FlatBufferBuilder builder, StringOffset entityIdOffset) { builder.AddOffset(0, entityIdOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddClassType(FlatBufferBuilder builder, ProtocolCS.ClassType classType) { builder.AddInt(2, (int)classType, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int level) { builder.AddInt(3, level, 0); }
  public static void AddMaxHp(FlatBufferBuilder builder, int maxHp) { builder.AddInt(4, maxHp, 0); }
  public static void AddHp(FlatBufferBuilder builder, int hp) { builder.AddInt(5, hp, 0); }
  public static void AddMaxMp(FlatBufferBuilder builder, int maxMp) { builder.AddInt(6, maxMp, 0); }
  public static void AddMp(FlatBufferBuilder builder, int mp) { builder.AddInt(7, mp, 0); }
  public static void AddPos(FlatBufferBuilder builder, Offset<ProtocolCS.Vec3> posOffset) { builder.AddStruct(8, posOffset.Value, 0); }
  public static void AddRotation(FlatBufferBuilder builder, float rotation) { builder.AddFloat(9, rotation, 0.0f); }
  public static Offset<RemotePC> EndRemotePC(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<RemotePC>(o);
  }
};


}
