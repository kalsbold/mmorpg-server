// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ProtocolCS.World
{

using global::System;
using global::FlatBuffers;

public struct Notify_Disappear : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Notify_Disappear GetRootAsNotify_Disappear(ByteBuffer _bb) { return GetRootAsNotify_Disappear(_bb, new Notify_Disappear()); }
  public static Notify_Disappear GetRootAsNotify_Disappear(ByteBuffer _bb, Notify_Disappear obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Notify_Disappear __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string EntityIdList(int j) { int o = __p.__offset(4); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int EntityIdListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<Notify_Disappear> CreateNotify_Disappear(FlatBufferBuilder builder,
      VectorOffset entity_id_listOffset = default(VectorOffset)) {
    builder.StartObject(1);
    Notify_Disappear.AddEntityIdList(builder, entity_id_listOffset);
    return Notify_Disappear.EndNotify_Disappear(builder);
  }

  public static void StartNotify_Disappear(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddEntityIdList(FlatBufferBuilder builder, VectorOffset entityIdListOffset) { builder.AddOffset(0, entityIdListOffset.Value, 0); }
  public static VectorOffset CreateEntityIdListVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartEntityIdListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Notify_Disappear> EndNotify_Disappear(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Notify_Disappear>(o);
  }
};


}
