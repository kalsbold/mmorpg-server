// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ProtocolSS.Manager
{

using global::System;
using global::FlatBuffers;

public struct Reply_CheckCredentialSuccess : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Reply_CheckCredentialSuccess GetRootAsReply_CheckCredentialSuccess(ByteBuffer _bb) { return GetRootAsReply_CheckCredentialSuccess(_bb, new Reply_CheckCredentialSuccess()); }
  public static Reply_CheckCredentialSuccess GetRootAsReply_CheckCredentialSuccess(ByteBuffer _bb, Reply_CheckCredentialSuccess obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Reply_CheckCredentialSuccess __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int SessionId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateSessionId(int session_id) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, session_id); return true; } else { return false; } }

  public static Offset<Reply_CheckCredentialSuccess> CreateReply_CheckCredentialSuccess(FlatBufferBuilder builder,
      int session_id = 0) {
    builder.StartObject(1);
    Reply_CheckCredentialSuccess.AddSessionId(builder, session_id);
    return Reply_CheckCredentialSuccess.EndReply_CheckCredentialSuccess(builder);
  }

  public static void StartReply_CheckCredentialSuccess(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddSessionId(FlatBufferBuilder builder, int sessionId) { builder.AddInt(0, sessionId, 0); }
  public static Offset<Reply_CheckCredentialSuccess> EndReply_CheckCredentialSuccess(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Reply_CheckCredentialSuccess>(o);
  }
};


}
